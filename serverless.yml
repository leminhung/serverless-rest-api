service: products-api-v3
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1

functions:
  authorizer:
    handler: authorizer.handler
    # environment:
    #   COGNITO_USERPOOL_ID: !Ref cognitoUserPool
    #   COGNITO_WEB_CLIENT_ID: !Ref cognitoUserPoolWebClient

  createProduct:
    handler: handler.createProduct
    environment:
      PRODUCTS_TABLE_NAME: !Ref ProductsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: "*"
    events:
      - http:
          method: post
          path: products
          authorizer: authorizer

  updateProduct:
    handler: handler.updateProduct
    environment:
      PRODUCTS_TABLE_NAME: !Ref ProductsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: "*"
    events:
      - http:
          method: put
          path: products/{id}
          authorizer: authorizer

  deleteProduct:
    handler: handler.deleteProduct
    environment:
      PRODUCTS_TABLE_NAME: !Ref ProductsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: "*"
    events:
      - http:
          method: delete
          path: products/{id}
          authorizer: authorizer

  getAllProducts:
    handler: handler.getAllProducts
    environment:
      PRODUCTS_TABLE_NAME: !Ref ProductsTable
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: "*"
    events:
      - http:
          method: get
          path: products
          authorizer:
            name: userpool_authorizer
            arn: arn:aws:cognito-idp:us-east-1:644877347704:userpool/us-east-1_5YeDwmvw7

plugins:
  - serverless-iam-roles-per-function

# you can add CloudFormation resource templates here
resources:
  Resources: ${file(resources.yml)}
